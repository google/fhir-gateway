<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2021-2023 Google LLC

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.google.fhir.gateway</groupId>
    <artifactId>fhir-gateway</artifactId>
    <version>0.3.2</version>
  </parent>

  <artifactId>exec</artifactId>
  <packaging>jar</packaging>

  <properties>
    <root.basedir>${project.parent.basedir}</root.basedir>
    <spring-boot.version>2.7.5</spring-boot.version>
    <!-- We do not want to deploy the `exec` uber jar. -->
    <maven.deploy.skip>true</maven.deploy.skip>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- Instead of using spring-boot-starter-parent as POM parent we add
      pieces needed from it; also see:
      https://docs.spring.io/spring-boot/docs/current/maven-plugin/reference/htmlsingle/#using.import
      -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- This merges the server and sample plugins together -->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>server</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>plugins</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!-- For Spring -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>

    <finalName>${project.parent.artifactId}-${project.artifactId}</finalName>

    <plugins>
      <!-- With this we can create a standalone executable JAR. -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring-boot.version}</version>
        <executions>
          <execution>
            <id>repackage</id>
            <goals>
              <goal>repackage</goal>
            </goals>
            <configuration>
              <mainClass>com.google.fhir.gateway.MainApp</mainClass>
              <!-- We use ZIP layout such that PropertiesLauncher is used and we
              can add extra jars through `loader.path` property:
              https://docs.spring.io/spring-boot/docs/current/reference/html/executable-jar.html#appendix.executable-jar.property-launcher
              This is useful for when people want to inject other plugins into
              this binary without recompiling this executable. We recognize
              that this is not a very likely pattern; it is probably easier to
              create a new executable by including all plugins as dependencies.
              -->
              <layout>ZIP</layout>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
